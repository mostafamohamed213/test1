// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication3.Models;

namespace WebApplication3.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20210807173916_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoursesProfessors", b =>
                {
                    b.Property<int>("Coursesid")
                        .HasColumnType("int");

                    b.Property<int>("Professorsid")
                        .HasColumnType("int");

                    b.HasKey("Coursesid", "Professorsid");

                    b.HasIndex("Professorsid");

                    b.ToTable("CoursesProfessors");
                });

            modelBuilder.Entity("WebApplication3.Models.ClassRooms", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassRoom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ClassRooms");
                });

            modelBuilder.Entity("WebApplication3.Models.Courses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("WebApplication3.Models.Days", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("WebApplication3.Models.Professors", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProfessorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeachLoad")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("WebApplication3.Models.Sections", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassRoom")
                        .HasColumnType("int");

                    b.Property<int>("Course")
                        .HasColumnType("int");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("Professor")
                        .HasColumnType("int");

                    b.Property<int>("SectionNumber")
                        .HasColumnType("int");

                    b.Property<int>("time")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ClassRoom");

                    b.HasIndex("Course");

                    b.HasIndex("Day");

                    b.HasIndex("Professor");

                    b.HasIndex("time");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("WebApplication3.Models.Time", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("CoursesProfessors", b =>
                {
                    b.HasOne("WebApplication3.Models.Courses", null)
                        .WithMany()
                        .HasForeignKey("Coursesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.Professors", null)
                        .WithMany()
                        .HasForeignKey("Professorsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication3.Models.Sections", b =>
                {
                    b.HasOne("WebApplication3.Models.ClassRooms", "ClassRooms")
                        .WithMany("Sections")
                        .HasForeignKey("ClassRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.Courses", "Courses")
                        .WithMany("Sections")
                        .HasForeignKey("Course")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.Days", "Days")
                        .WithMany("Sections")
                        .HasForeignKey("Day")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.Professors", "Professors")
                        .WithMany("Sections")
                        .HasForeignKey("Professor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.Time", "Time")
                        .WithMany("Sections")
                        .HasForeignKey("time")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRooms");

                    b.Navigation("Courses");

                    b.Navigation("Days");

                    b.Navigation("Professors");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("WebApplication3.Models.ClassRooms", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("WebApplication3.Models.Courses", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("WebApplication3.Models.Days", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("WebApplication3.Models.Professors", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("WebApplication3.Models.Time", b =>
                {
                    b.Navigation("Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
